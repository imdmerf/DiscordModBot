from sqlite3.dbapi2 import Timestamp
from typing import Text
from discord import embeds, guild, widget
from discord.ext import commands
from discord.ext.commands.core import command
import discord.utils
from Main import *
import datetime
import re
import asyncio
from someimportantthings import GIRLS_ROLE, BOYS_ROLE, TRUSTED_CHANNELS, CHANNEL_FOR_LOGS, MUTE_ROLE


time_regex = re.compile("(?:(\d{1,5})(h|s|m|d))+?")
time_dict = {"h":3600, "s":1, "m":60, "d":86400}

intents = discord.Intents.default()

intents.members = True

class TimeConverter(commands.Converter):
    async def convert(self, ctx, argument):
        args = argument.lower()
        matches = re.findall(time_regex, args)
        time = 0
        for v, k in matches:
            try:
                time += time_dict[k]*float(v)
            except KeyError:
                raise commands.BadArgument("{} –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω—ã–π –∫–ª—é—á –≤—Ä–µ–º–µ–Ω–∏!".format(k))
            except ValueError:
                raise commands.BadArgument("{} –≠—Ç–æ –Ω–µ —á–∏—Å–ª–æ!".format(v))
        return time

class mod(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command()
    @commands.has_permissions(ban_members=True)
    async def ban(self, ctx, member:discord.Member, *, reason="–ù–µ –∑–∞–¥–∞–Ω–∞"):
        if ctx.channel.id in TRUSTED_CHANNELS:
            ch = bot.get_channel(CHANNEL_FOR_LOGS) # id –∫–∞–Ω–∞–ª–∞, –∫—É–¥–∞ –Ω—É–∂–Ω–æ –≤—ã—Å—ã–ª–∞—Ç—å –ª–æ–≥
            author = ctx.message.author
            image = author.avatar_url
            for_user=discord.Embed(title=f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {member}", description=f"", color=0x32353b)
            for_user.add_field(name=">>> –ü—Ä–∏—á–∏–Ω–∞ –±–∞–Ω–∞", value=f"`{reason}`", inline=True)
            for_user.set_footer(text=f"–ë–∞–Ω –≤—ã–¥–∞–ª: {author}", icon_url=image)
            for_user.set_thumbnail(url=member.avatar_url)
            embed = discord.Embed(title=f"–õ–û–ì - –ë–∞–Ω", color=0x32353b, timestamp=ctx.message.created_at)
            embed.add_field(name=f">>> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", value=member.mention, inline=True)
            embed.add_field(name=f">>> –ü—Ä–∏—á–∏–Ω–∞ –±–∞–Ω–∞:", value=f"`{reason}`", inline=True)
            embed.set_footer(text=f"–ë–∞–Ω –≤—ã–¥–∞–ª: {author}", icon_url=image) 
            embed.set_thumbnail(url=member.avatar_url)
            try:
                await member.send(embed=for_user)
            except: 
                await ctx.send("–õ–∏—á–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–∫—Ä—ã—Ç–∞!")
            await member.ban(reason=reason)
            await ch.send(embed=embed)

    @commands.command()
    @commands.has_permissions(kick_members=True)
    async def kick(self, ctx, member:discord.Member, *, reason="–ù–µ –∑–∞–¥–∞–Ω–∞"):
        if ctx.channel.id in TRUSTED_CHANNELS:
            ch = bot.get_channel(CHANNEL_FOR_LOGS) # id –∫–∞–Ω–∞–ª–∞, –∫—É–¥–∞ –Ω—É–∂–Ω–æ –≤—ã—Å—ã–ª–∞—Ç—å –ª–æ–≥
            author = ctx.message.author
            image = author.avatar_url
            for_user=discord.Embed(title=f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {member}", description=f"", color=0x32353b)
            for_user.add_field(name=">>> –ü—Ä–∏—á–∏–Ω–∞ –∫–∏–∫–∞", value=f"`{reason}`", inline=True)
            for_user.set_footer(text=f"–ö–∏–∫–Ω—É–ª: {author}", icon_url=image)
            for_user.set_thumbnail(url=member.avatar_url)
            embed = discord.Embed(title=f"–õ–û–ì - –ö–∏–∫", color=0x32353b, timestamp=ctx.message.created_at)
            embed.add_field(name=f">>> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", value=member.mention, inline=True)
            embed.add_field(name=f">>> –ü—Ä–∏—á–∏–Ω–∞ –∫–∏–∫–∞:", value=f"`{reason}`", inline=True)
            embed.set_footer(text=f"–ö–∏–∫ –≤—ã–¥–∞–ª: {author}", icon_url=image) 
            embed.set_thumbnail(url=member.avatar_url)
            await member.kick(reason=reason)
            try:
                await member.send(embed=for_user)
            except:
                await ctx.send("–õ–∏—á–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–∫—Ä—ã—Ç–∞!", delete_after=5)
            await ch.send(embed=embed)


    @commands.command()
    @commands.has_permissions(manage_messages=True, manage_roles=True)
    async def mute(self, ctx, member:discord.Member,  time:TimeConverter = None, *, reason="–ù–µ –∑–∞–¥–∞–Ω–∞"):
        if ctx.channel.id in TRUSTED_CHANNELS:
            author = ctx.message.author
            image = author.avatar_url
            ch = bot.get_channel(CHANNEL_FOR_LOGS) # id –∫–∞–Ω–∞–ª–∞, –∫—É–¥–∞ –Ω—É–∂–Ω–æ –≤—ã—Å—ã–ª–∞—Ç—å –ª–æ–≥
            role = discord.utils.get(member.guild.roles, id=MUTE_ROLE) # –†–æ–ª—å –¥–ª—è –º—É—Ç–∞
            startembed = discord.Embed(title=f"–ù–∞—Ä—É—à–∏—Ç–µ–ª—å ‚Äî `{member}`", color=0x32353b)
            startembed.set_author(name="–ú–µ–Ω—é –≤—ã–¥–∞—á–∏ –º—É—Ç–∞")
            startembed.add_field(name=">>> –ü—Ä–∏—á–∏–Ω–∞ –º—É—Ç–∞", value=f"`{reason}`", inline=True)
            startembed.add_field(name=">>>  –°—Ä–æ–∫ –º—É—Ç–∞", value=f"`{time/60} –º–∏–Ω—É—Ç`", inline=True)
            startembed.set_footer(text=f"–ú—É—Ç –≤—ã–¥–∞—ë—Ç: {author}", icon_url=image) 
            startembed.set_thumbnail(url=member.avatar_url)
            for_usertext=discord.Embed(title=f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {member}", description=f"–¢—ã –ø–æ–ª—É—á–∏–ª –º—É—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —á–∞—Ç–∞ –Ω–∞: {time/60} –º–∏–Ω—É—Ç", color=0x32353b)
            for_usertext.set_footer(text=f"–í—ã–¥–∞–ª –º—É—Ç: {author}", icon_url=image)
            for_usertext.add_field(name=">>> –ü—Ä–∏—á–∏–Ω–∞ –º—É—Ç–∞", value=f"`{reason}`", inline=True)
            for_usertext.set_thumbnail(url=member.avatar_url)
            for_uservoice=discord.Embed(title=f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {member}", description=f"–¢—ã –ø–æ–ª—É—á–∏–ª –º—É—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —á–∞—Ç–∞ –Ω–∞: {time/60} –º–∏–Ω—É—Ç", color=0x32353b)
            for_uservoice.set_footer(text=f"–í—ã–¥–∞–ª –º—É—Ç: {author}", icon_url=image)
            for_uservoice.add_field(name=">>> –ü—Ä–∏—á–∏–Ω–∞ –º—É—Ç–∞", value=f"`{reason}`", inline=True)
            for_uservoice.set_thumbnail(url=member.avatar_url)
            for_usercandv=discord.Embed(title=f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {member}", description=f"–¢—ã –ø–æ–ª—É—á–∏–ª –º—É—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —á–∞—Ç–∞ –Ω–∞: {time/60} –º–∏–Ω—É—Ç", color=0x32353b)
            for_usercandv.set_footer(text=f"–í—ã–¥–∞–ª –º—É—Ç: {author}", icon_url=image)
            for_usercandv.add_field(name=">>> –ü—Ä–∏—á–∏–Ω–∞ –º—É—Ç–∞", value=f"`{reason}`", inline=True)
            for_usercandv.set_thumbnail(url=member.avatar_url)
            tembed = discord.Embed(title=f"–õ–û–ì - –≤—ã–¥–∞—á–∞ –º—É—Ç–∞", color=0x32353b, timestamp=ctx.message.created_at)
            tembed.add_field(name=f">>> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", value=member.mention, inline=True)
            tembed.add_field(name=f">>> –ü—Ä–∏—á–∏–Ω–∞ –º—É—Ç–∞:", value=f"`{reason}`", inline=True)
            tembed.add_field(name=f">>> –í–∏–¥ –º—É—Ç–∞:", value="`–¢–µ–∫—Å—Ç–æ–≤—ã–π`", inline=False)
            tembed.add_field(name=f">>> –°—Ä–æ–∫ –º—É—Ç–∞ –≤ –º–∏–Ω—É—Ç–∞—Ö:", value=f"`{time/60}`", inline=True)
            tembed.set_footer(text=f"–ú—É—Ç –≤—ã–¥–∞–ª: {author}", icon_url=image) 
            tembed.set_thumbnail(url=member.avatar_url)
            vembed = discord.Embed(title=f"–õ–û–ì - –≤—ã–¥–∞—á–∞ –º—É—Ç–∞", color=0x32353b, timestamp=ctx.message.created_at)
            vembed.add_field(name=f">>> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", value=member.mention, inline=True)
            vembed.add_field(name=f">>> –ü—Ä–∏—á–∏–Ω–∞ –º—É—Ç–∞:", value=f"`{reason}`", inline=True)
            vembed.add_field(name=f">>> –í–∏–¥ –º—É—Ç–∞:", value="`–ì–æ–ª–æ—Å–æ–≤–æ–π`", inline=False)
            vembed.add_field(name=f">>> –°—Ä–æ–∫ –º—É—Ç–∞ –≤ –º–∏–Ω—É—Ç–∞—Ö:", value=f"`{time/60}`", inline=True)
            vembed.set_footer(text=f"–ú—É—Ç –≤—ã–¥–∞–ª: {author}", icon_url=image) 
            vembed.set_thumbnail(url=member.avatar_url)
            tvembed = discord.Embed(title=f"–õ–û–ì - –≤—ã–¥–∞—á–∞ –º—É—Ç–∞", color=0x32353b, timestamp=ctx.message.created_at)
            tvembed.add_field(name=f">>> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", value=member.mention, inline=True)
            tvembed.add_field(name=f">>> –ü—Ä–∏—á–∏–Ω–∞ –º—É—Ç–∞:", value=f"`{reason}`", inline=True)
            tvembed.add_field(name=f">>> –í–∏–¥ –º—É—Ç–∞:", value="`–¢–µ–∫—Å—Ç–æ–≤—ã–π –∏ –≥–æ–ª–æ—Å–æ–≤–æ–π`", inline=False)
            tvembed.add_field(name=f">>> –°—Ä–æ–∫ –º—É—Ç–∞ –≤ –º–∏–Ω—É—Ç–∞—Ö:", value=f"`{time/60}`", inline=True)
            tvembed.set_footer(text=f"–ú—É—Ç –≤—ã–¥–∞–ª: {author}", icon_url=image) 
            tvembed.set_thumbnail(url=member.avatar_url)
            err=discord.Embed(title=f"{member} –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ", color=0x32353b)
            err.set_author(name="–î–µ–π—Å—Ç–≤–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ")
            role_err=discord.Embed(title=f"{member} —É–∂–µ –ø–æ–ª—É—á–∏–ª –º—É—Ç", color=0x32353b)
            role_err.set_author(name="–î–µ–π—Å—Ç–≤–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ")
            await ctx.send(embed=startembed, 
                    components=[
                    [Button(style=ButtonStyle.grey, label="–¢–æ–ª—å–∫–æ —á–∞—Ç", emoji="üí¨"),
                    Button(style=ButtonStyle.grey, label="–¢–æ–ª—å–∫–æ –≤–æ–π—Å", emoji="üé§"),
                    Button(style=ButtonStyle.grey, label="–ß–∞—Ç –∏ –≤–æ–π—Å", emoji="üîá")],
                    [Button(style=ButtonStyle.red, label="–û—Ç–º–µ–Ω–∞", emoji="‚ùå"),]
                ],
            )

            response = await bot.wait_for("button_click")
            if response.channel == ctx.channel:
                if response.component.label == "–¢–æ–ª—å–∫–æ —á–∞—Ç":
                    if role in member.roles:
                        await ctx.channel.purge(limit=2)
                        await ctx.send(embed=role_err, delete_after=5)
                    else:
                        try:
                            await member.send(embed=for_usertext)
                        except:
                            await ctx.send("–õ–∏—á–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–∫—Ä—ã—Ç–∞!", delete_after=5)
                        await ctx.channel.purge(limit=2)
                        await ch.send(embed=tembed)
                        await member.add_roles(role)
                        if time:
                            await asyncio.sleep(time)
                            await member.remove_roles(role)

                elif response.component.label == "–¢–æ–ª—å–∫–æ –≤–æ–π—Å":
                    if member.voice is not None:
                            try:
                                await member.send(embed=for_uservoice)
                            except:
                                await ctx.send("–õ–∏—á–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–∫—Ä—ã—Ç–∞!", delete_after=5)
                            await ctx.channel.purge(limit=2)
                            await ch.send(embed=vembed)
                            await member.edit(mute=True)
                            if time:
                                await asyncio.sleep(time)
                                await member.edit(mute=False)
                    else:
                        await ctx.channel.purge(limit=2)
                        await ctx.send(embed=err, delete_after=5)

                elif response.component.label == "–ß–∞—Ç –∏ –≤–æ–π—Å":
                    if member.voice is not None:
                        if role in member.roles:
                            await ctx.send(embed=role_err)
                        else:    
                            try:
                                await member.send(embed=for_usercandv)
                            except:
                                await ctx.send("–õ–∏—á–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–∫—Ä—ã—Ç–∞!", delete_after=5)
                            await ctx.channel.purge(limit=2)
                            await ch.send(embed=tvembed)
                            await member.add_roles(role)
                            await member.edit(mute=True)
                            if time:
                                await asyncio.sleep(time)
                                await member.edit(mute=False)
                                await member.remove_roles(role)
                    else:
                        await ctx.channel.purge(limit=2)
                        await ctx.send(embed=err, delete_after=5)
                
                elif response.component.label == "–û—Ç–º–µ–Ω–∞":
                    await ctx.channel.purge(limit=2)

    @commands.command()
    @commands.has_permissions(manage_roles=True)
    async def gender(self, ctx, member:discord.Member):
        if ctx.channel.id in TRUSTED_CHANNELS:
            ch = bot.get_channel(CHANNEL_FOR_LOGS) # id –∫–∞–Ω–∞–ª–∞, –∫—É–¥–∞ –Ω—É–∂–Ω–æ –≤—ã—Å—ã–ª–∞—Ç—å –ª–æ–≥
            author = ctx.message.author
            image = author.avatar_url
            startembed = discord.Embed(title=f"–ú–µ–Ω—é –≤—ã–¥–∞—á–∏ –≥–µ–Ω–¥–µ—Ä–Ω–æ–π —Ä–æ–ª–∏", color=0x32353b)
            startembed.add_field(name=f">>> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Äî `{member}`", value="\u200b", inline=True)
            startembed.set_footer(text=f"–†–æ–ª—å –≤—ã–¥–∞—ë—Ç: {author}", icon_url=image) 
            startembed.set_thumbnail(url=member.avatar_url)
            role = discord.utils.get(member.guild.roles, id=GIRLS_ROLE) # –†–æ–ª—å –¥–ª—è –¥–µ–≤–æ—á–∫–∏
            secondrole= discord.utils.get(member.guild.roles, id=BOYS_ROLE)  # –†–æ–ª—å –¥–ª—è –º–∞–ª—å—á–∏–∫–∞
            fembed = discord.Embed(title=f"–õ–û–ì - –≤—ã–¥–∞—á–∞ –≥–µ–Ω–¥–µ—Ä–Ω–æ–π —Ä–æ–ª–∏", color=0x32353b, timestamp=ctx.message.created_at)
            fembed.add_field(name=f">>> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", value=member.mention, inline=True)
            fembed.add_field(name=f">>> –í—ã–¥–∞–Ω–Ω–∞—è —Ä–æ–ª—å:", value=role.mention, inline=True)
            fembed.set_footer(text=f"–†–æ–ª—å –≤—ã–¥–∞–ª: {author}", icon_url=image) 
            fembed.set_thumbnail(url=member.avatar_url)
            membed = discord.Embed(title=f"–õ–û–ì - –≤—ã–¥–∞—á–∞ –≥–µ–Ω–¥–µ—Ä–Ω–æ–π —Ä–æ–ª–∏", color=0x32353b, timestamp=ctx.message.created_at)
            membed.add_field(name=f">>> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", value=member.mention, inline=True)
            membed.add_field(name=f">>> –í—ã–¥–∞–Ω–Ω–∞—è —Ä–æ–ª—å:", value=secondrole.mention, inline=True)
            membed.set_footer(text=f"–†–æ–ª—å –≤—ã–¥–∞–ª: {author}", icon_url=image) 
            membed.set_thumbnail(url=member.avatar_url)
            await ctx.send(embed=startembed, 
                    components=[
                    [Button(style=ButtonStyle.gray, label="–ü–∞—Ä–µ–Ω—å", emoji="‚ôÇÔ∏è"),
                    Button(style=ButtonStyle.gray, label="–î–µ–≤—É—à–∫–∞", emoji="‚ôÄÔ∏è"),],
                    [Button(style=ButtonStyle.red, label="–û—Ç–º–µ–Ω–∞", emoji="‚ùå"),]
                ],
            )

            response = await bot.wait_for("button_click")
            if response.channel == ctx.channel:
                if response.component.label == "–ü–∞—Ä–µ–Ω—å":
                    await ctx.channel.purge(limit=2)
                    await member.remove_roles(role)
                    await member.add_roles(secondrole)
                    await ch.send(embed=membed)

                elif response.component.label == "–î–µ–≤—É—à–∫–∞":
                    await ctx.channel.purge(limit=2)
                    await member.remove_roles(secondrole)
                    await member.add_roles(role)
                    await ch.send(embed=fembed)

                elif response.component.label == "–û—Ç–º–µ–Ω–∞":
                    await ctx.channel.purge(limit=2)       

    @commands.command()
    @commands.has_permissions(manage_roles=True)
    async def swap(self, ctx, member:discord.Member):
        if ctx.channel.id in TRUSTED_CHANNELS:
            ch = bot.get_channel(CHANNEL_FOR_LOGS)
            success=discord.Embed(title=f'\u200b',description=f'–†–æ–ª—å –¥–ª—è {member} –æ–±–Ω–æ–≤–ª–µ–Ω–∞', color=0x32353b)
            success.set_thumbnail(url=member.avatar_url)
            fr = discord.utils.get(member.guild.roles, id=BOYS_ROLE) # –†–æ–ª—å –¥–ª—è –º–∞–ª—å—á–∏–∫–∞
            secondrole = discord.utils.get(member.guild.roles, id=GIRLS_ROLE) # –†–æ–ª—å –¥–ª—è –¥–µ–≤–æ—á–∫–∏
            if fr in member.roles:
                await member.remove_roles(fr)
                await member.add_roles(secondrole)
            else:
                await member.remove_roles(secondrole)   
                await member.add_roles(fr)
                await ctx.channel.purge(limit=1)

    @commands.command()
    @commands.has_permissions(manage_roles=True)
    async def give(self,ctx, member:discord.Member, *, role: discord.Role):
        if ctx.channel.id in TRUSTED_CHANNELS:
            ch = bot.get_channel(CHANNEL_FOR_LOGS) # id –∫–∞–Ω–∞–ª–∞, –∫—É–¥–∞ –Ω—É–∂–Ω–æ –≤—ã—Å—ã–ª–∞—Ç—å –ª–æ–≥
            author = ctx.message.author
            image = author.avatar_url
            startembed = discord.Embed(title=f"–õ–û–ì - –≤—ã–¥–∞—á–∞ —Ä–æ–ª–∏", color=0x32353b, timestamp=ctx.message.created_at)
            startembed.add_field(name=f">>> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", value=member.mention, inline=True)
            startembed.add_field(name=f">>> –í—ã–¥–∞–Ω–Ω–∞—è —Ä–æ–ª—å:", value=role.mention, inline=True)
            startembed.set_footer(text=f"–†–æ–ª—å –≤—ã–¥–∞–ª: {author}", icon_url=image) 
            startembed.set_thumbnail(url=member.avatar_url)
            await member.add_roles(role)
            await ch.send(embed=startembed)

    @commands.command()
    @commands.has_permissions(manage_roles=True)
    async def take(self,ctx, member:discord.Member, *, role: discord.Role):
        if ctx.channel.id in TRUSTED_CHANNELS:
            ch = bot.get_channel(CHANNEL_FOR_LOGS) # id –∫–∞–Ω–∞–ª–∞, –∫—É–¥–∞ –Ω—É–∂–Ω–æ –≤—ã—Å—ã–ª–∞—Ç—å –ª–æ–≥
            author = ctx.message.author
            image = author.avatar_url
            startembed = discord.Embed(title=f"–õ–û–ì - —Å–Ω—è—Ç–∏–µ —Ä–æ–ª–∏", color=0x32353b, timestamp=ctx.message.created_at)
            startembed.add_field(name=f">>> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", value=member.mention, inline=True)
            startembed.add_field(name=f">>> C–Ω—è—Ç–∞—è —Ä–æ–ª—å:", value=role.mention, inline=True)
            startembed.set_footer(text=f"–†–æ–ª—å —Å–Ω—è–ª: {author}", icon_url=image) 
            startembed.set_thumbnail(url=member.avatar_url)
            if role in member.roles:
                await member.remove_roles(role)
                await ch.send(embed=startembed)
            else:
                return

    @commands.command()
    async def clear(self, ctx, amount: int):  # –∑–∞–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, —Ç.–µ. –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã.
        messages = await ctx.channel.purge(limit=amount + 1)  # –ø—É—Ä–¥–∂–∏–º —Å–æ–æ–±—â–µ–Ω–∏—è, +1 —Ç.–∫. –Ω–∞—à–µ —Ç–æ–∂–µ —É–¥–∞–ª–∏—Ç—Å—è

        
def setup(bot):
    bot.add_cog(mod(bot=bot))
